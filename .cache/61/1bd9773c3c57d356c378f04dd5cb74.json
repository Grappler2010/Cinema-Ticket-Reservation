{"id":"node_modules/jsdom/lib/jsdom/utils.js","dependencies":[{"name":"C:\\Projects\\RealProjects\\Cinema\\package.json","includedInParent":true,"mtime":1558527872691},{"name":"C:\\Projects\\RealProjects\\Cinema\\.babelrc","includedInParent":true,"mtime":1558361049995},{"name":"C:\\Projects\\RealProjects\\Cinema\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1558527799671}],"generated":{"js":"/**\n * Intercepts a method by replacing the prototype's implementation\n * with a wrapper that invokes the given interceptor instead.\n * \n *     utils.intercept(core.Element, 'inserBefore',\n *       function(_super, args, newChild, refChild) {\n *         console.log('insertBefore', newChild, refChild);\n *         return _super.apply(this, args);\n *       }\n *     );\n */\nexports.intercept = function(clazz, method, interceptor) {\n  var proto = clazz.prototype,\n      _super = proto[method],\n      unwrapArgs = interceptor.length > 2;\n\n  proto[method] = function() {\n    if (unwrapArgs) {\n      var args = Array.prototype.slice.call(arguments);\n      args.unshift(_super, arguments);\n      return interceptor.apply(this, args);\n    }\n    else {\n      return interceptor.call(this, _super, arguments);\n    }\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/utils.js":"/**\n * Intercepts a method by replacing the prototype's implementation\n * with a wrapper that invokes the given interceptor instead.\n * \n *     utils.intercept(core.Element, 'inserBefore',\n *       function(_super, args, newChild, refChild) {\n *         console.log('insertBefore', newChild, refChild);\n *         return _super.apply(this, args);\n *       }\n *     );\n */\nexports.intercept = function(clazz, method, interceptor) {\n  var proto = clazz.prototype,\n      _super = proto[method],\n      unwrapArgs = interceptor.length > 2;\n\n  proto[method] = function() {\n    if (unwrapArgs) {\n      var args = Array.prototype.slice.call(arguments);\n      args.unshift(_super, arguments);\n      return interceptor.apply(this, args);\n    }\n    else {\n      return interceptor.call(this, _super, arguments);\n    }\n  };\n};\n"},"lineCount":28}},"error":null,"hash":"ece17272fabb3b830a843739c1402dfc","cacheData":{"env":{}}}